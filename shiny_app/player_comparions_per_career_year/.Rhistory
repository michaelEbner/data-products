),
server = function(input, output) {
data1 <- reactive({
slug <- subset(players,name == input$player1) %>% select(slug) %>% as.character()
initial <- paste0(substr(slug, 1, 1),"/")
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,slug,".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
})
output$table1 <- renderTable(data1())
}
))
runApp(list(
ui = fluidPage(
selectInput("player1", "Select a player",
#list(`A` = players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))) %>% as.list(),
#      `B` = players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^B.*"))) %>% as.list())
list(`A` = as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))),
`B` = as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^B.*")))))
),
verbatimTextOutput('bar')
),
server = function(input, output) {
data1 <- reactive({
slug <- subset(players,name == input$player1) %>% select(slug) %>% as.character()
initial <- paste0(substr(slug, 1, 1),"/")
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,slug,".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
})
output$table1 <- renderTable(data1())
}
))
as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))))
players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))) %>% as.list()
a <- players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))) %>% as.list()
str(a)
b <- c("Ayers Jeff","Azubuike Kelenna")
str(b)
as.charachter(a)
as.character(a)
str(b)
unlist(a)
c <- unlist(a)
str(a)
str(c)
runApp(list(
ui = fluidPage(
selectInput("player1", "Select a player",
list(`A` = players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))),
`B` = players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^B.*"))))
),
verbatimTextOutput('bar')
),
server = function(input, output) {
data1 <- reactive({
slug <- subset(players,name == input$player1) %>% select(slug) %>% as.character()
initial <- paste0(substr(slug, 1, 1),"/")
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,slug,".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
})
output$table1 <- renderTable(data1())
}
))
a <- players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))
a <- players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))
str(a)
a <- players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))) %>% as.list()
a
str(a)
b <- names(unlist(a))
str(b)
names(a[[1]])
length(b)
length(a)
nrow(a)
a
str(a)
a <- players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")) %>% names())
a <- players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")) %>% names()
)
a <- players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))
a
names(a)
str(a)
a <- players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")) %>% list())
a <- players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))
)
a <- players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))) %>% list()
str(a)
b <- sapply(a,paste0,collapse="")
b
str(b)
b <- unlist(a,use.names = T)
a
str(a)
as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))
)
a <- as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))))
str(a)
a
b <- ("a","b","c")
b <- c("a","b","c")
b
str)b
str(b)
str(a)
unlist(a,use.names = T)
unlist(a)
runApp(list(
ui = fluidPage(
selectInput("player1", "Select a player",
list(`A` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))))))
),
verbatimTextOutput('bar')
),
server = function(input, output) {
data1 <- reactive({
slug <- subset(players,name == input$player1) %>% select(slug) %>% as.character()
initial <- paste0(substr(slug, 1, 1),"/")
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,slug,".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
})
output$table1 <- renderTable(data1())
}
))
unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))))
unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))),use.names = F)
runApp(list(
ui = fluidPage(
selectInput("player1", "Select a player",
list(`A` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))))),use.names = F)
),
verbatimTextOutput('bar')
),
server = function(input, output) {
data1 <- reactive({
slug <- subset(players,name == input$player1) %>% select(slug) %>% as.character()
initial <- paste0(substr(slug, 1, 1),"/")
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,slug,".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
})
output$table1 <- renderTable(data1())
}
))
unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))))),use.names = F)
unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))))use.names = F)
unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))))))
as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))))
as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*"))))
runApp(list(
ui = fluidPage(
selectInput("player1", "Select a player",
list(`A` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))),use.names = F))
),
verbatimTextOutput('bar')
),
server = function(input, output) {
data1 <- reactive({
slug <- subset(players,name == input$player1) %>% select(slug) %>% as.character()
initial <- paste0(substr(slug, 1, 1),"/")
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,slug,".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
})
output$table1 <- renderTable(data1())
}
))
runApp(list(
ui = fluidPage(
selectInput("player1", "Select a player",
list(`A` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))),use.names = F),
`B` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^B.*")))),use.names = F))
),
verbatimTextOutput('bar')
),
server = function(input, output) {
data1 <- reactive({
slug <- subset(players,name == input$player1) %>% select(slug) %>% as.character()
initial <- paste0(substr(slug, 1, 1),"/")
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,slug,".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
})
output$table1 <- renderTable(data1())
}
))
runApp(list(
ui = fluidPage(
selectInput("player1", "Select a player",
list(`A` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))),use.names = F),
`B` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^B.*")))),use.names = F))
),
verbatimTextOutput('bar')
),
server = function(input, output) {
data1 <- reactive({
slug <- subset(players,name == input$player1) %>% select(slug) %>% as.character()
initial <- paste0(substr(slug, 1, 1),"/")
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,slug,".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
})
output$table1 <- renderTable(data1())
}
))
runApp(list(
ui = fluidPage(
selectInput("player1", "Select a player",
list(`A` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))),use.names = F),
`B` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^B.*")))),use.names = F))
),
verbatimTextOutput('bar')
),
server = function(input, output) {
data1 <- reactive({
slug <- subset(players,name == input$player1) %>% select(slug) %>% as.character()
initial <- paste0(substr(slug, 1, 1),"/")
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,slug,".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
})
output$table1 <- renderTable(data1())
}
))
runApp(list(
ui = fluidPage(
selectInput("player1", "Select a player",
list(`A` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))),use.names = F),
`B` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^B.*")))),use.names = F))
),
verbatimTextOutput('bar')
),
server = function(input, output) {
df_player1 <- reactive({
slug <- subset(players,name == input$player1) %>% select(slug) %>% as.character()
initial <- paste0(substr(slug, 1, 1),"/")
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,slug,".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
})
output$table1 <- renderTable(df_player1())
}
))
ui <- fluidPage(
selectInput("dataset", "Dataset", c("diamonds", "rock", "pressure", "cars")),
conditionalPanel( condition = "output.nrows",
checkboxInput("headonly", "Only use first 1000 rows"))
)
server <- function(input, output, session) {
datasetInput <- reactive({
switch(input$dataset,
"rock" = rock,
"pressure" = pressure,
"cars" = cars)
})
output$nrows <- reactive({
nrow(datasetInput())
})
outputOptions(output, "nrows", suspendWhenHidden = FALSE)
}
shinyApp(ui, server)
runExample("03_reactivity")
slug <- subset(players,name == input$player1) %>% select(slug) %>% as.character()
slug <- subset(players,name == "Bryant Kobe") %>% select(slug) %>% as.character()
slug
slug <- as.character(subset(players,name == "Bryant Kobe") %>% select(slug))
slug
subset(players,name == "Bryant Kobe")
subset(players,name == "Bryant Kobe") %>% select(slug)
a <- subset(players,name == "Bryant Kobe") %>% select(slug)
str(a)
a
a[,1]
a[1,]
a[1,1]
str(a[1,1])
a <- subset(players,name == "Bryant Kobe") %>% select(slug)
a
str(a)
as.character(a[1,1])
slug <- subset(players,name == input$player1) %>% select(slug) %>% as.character()
slug <- subset(players,name == "Bryant Kobe") %>% select(slug) %>% as.character()
slug
slug <- as.character(subset(players,name == "Bryant Kobe") %>% select(slug)[1,1])
slug <- ubset(players,name == "Bryant Kobe") %>% select(slug)
slug <- subset(players,name == "Bryant Kobe") %>% select(slug)
slug
initial <- paste0(substr(as.character(slug[1,1]), 1, 1),"/")
initial
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,as.character(slug[1,1]),".html"), which = 1, header = 1,rm_nodata_cols = F)
head(df)
runApp(list(
ui = fluidPage(
selectInput("player1", "Select a player",
list(`A` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))),use.names = F),
`B` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^B.*")))),use.names = F))
),
verbatimTextOutput('bar')
),
server = function(input, output) {
df_player1 <- reactive({
slug <- subset(players,name == input$player1) %>% select(slug)
initial <- paste0(substr(as.character(slug[1,1]), 1, 1),"/")
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,as.character(slug[1,1]),".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
})
output$table1 <- renderTable(df_player1())
}
))
slug <- subset(players,name == "Bryant Kobe") %>% select(slug)
slug
initial <- paste0(substr(as.character(slug[1,1]), 1, 1),"/")
initial
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,as.character(slug[1,1]),".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
df
runApp(list(
ui = fluidPage(
selectInput("player1", "Select a player",
list(`A` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))),use.names = F),
`B` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^B.*")))),use.names = F))
),
verbatimTextOutput('bar')
),
server = function(input, output) {
df_player1 <- reactive({
slug <- subset(players,name == "Bryant Kobe") %>% select(slug)
initial <- paste0(substr(as.character(slug[1,1]), 1, 1),"/")
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,as.character(slug[1,1]),".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
})
output$table1 <- renderTable(df_player1())
}
))
View(players)
players
str(players)
head(players)
df_players = data.frame()
for (i in  LETTERS){
# vector output
players <- try(get_players(i))
df_players <- rbind(df_players,players)
}
str(df_players)
players <- df_players %>% mutate_at(grep("^from$|^to$$)",colnames(.)),funs(as.numeric()))
players <- df_players %>% mutate_at(grep("^from$|^to$)",colnames(.)),funs(as.numeric()))
players <- df_players %>% mutate_each_(funs(as.numeric), from)
str(df_players)
players <- df_players %>% mutate_each_(funs(as.numeric), l1)
l1 <- c("fac1","fac2","fac3")
l2 <- c("dbl1","dbl2","dbl3")
dat[,l1] <- lapply(dat[,l1], factor)
dat[,l2] <- lapply(dat[,l2], as.numeric)
dat <- dat %>% mutate(
fac1 = factor(fac1), fac2 = factor(fac2), fac3 = factor(fac3),
dbl1 = as.numeric(dbl1), dbl2 = as.numeric(dbl2), dbl3 = as.numeric(dbl3)
)
str(get_players)
str(df_players)
players <- df_players %>% mutate_if(is.factor, as.numeric)
str(players)
players <- df_players %>% mutate_if(is.character, as.numeric)
str(players)
players <- df_players %>% mutate(from = as.numeric(from))
head(players)
str(players)
View(players)
View(df_players)
players <- df_players %>% filter(!str_match(player),"^Error.*")) %>% mutate(from = as.numeric(from))
players <- df_players %>% filter(!str_match(player),"^Error.*") %>% mutate(from = as.numeric(from))
players <- df_players %>% filter(!str_match(player,"^Error.*")) %>% mutate(from = as.numeric(from))
players <- df_players %>% filter(!str_match(player,"^Error.*"))
players <- df_players %>% filter(!str_match(player,"^Error.*"))
players <- df_players %>% filter(str_match(player,"^Error.*"))
players <- df_players %>% filter(!str_match(player,"^Error.*"))
players <- df_players %>% filter(str_match(player,"^Error.*"))
str(players)
str(df_players)
players <- df_players %>% mutate(from = as.numeric(from)) %>% filter(!is.na(str_match(from,"^A.*"))
df_players$name <- paste0(sub("[a-zA-Z\\.\\'\\-]+ ", "", df_players$player)," ",sub(" [a-zA-Z\\.\\'\\-]+", "", df_players$player))
players <- df_players
write.csv(df_players,"players.csv", row.names = F)
players <- read.csv("players.csv")
runApp(list(
ui = fluidPage(
selectInput("player1", "Select a player",
list(`A` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^A.*")))),use.names = F),
`B` = unlist(as.list(players %>% select(name) %>% filter(!is.na(str_match(as.character(players$name),"^B.*")))),use.names = F))
),
verbatimTextOutput('bar')
),
server = function(input, output) {
df_player1 <- reactive({
slug <- subset(players,name == "Bryant Kobe") %>% select(slug)
initial <- paste0(substr(as.character(slug[1,1]), 1, 1),"/")
df <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initial,as.character(slug[1,1]),".html"), which = 1, header = 1,rm_nodata_cols = F)
return(df)
})
output$table1 <- renderTable(df_player1())
}
))
players <- df_players %>% mutate(from = as.numeric(from)) %>% filter(!is.na(str_match(from,"^A.*")))
View(players)
players <- df_players %>% mutate(from = as.numeric(from))
View(players)
players <- df_players %>% mutate(from = as.numeric(from)) %>% filter(!is.na(from))
View(players)
players <- df_players %>% mutate(from = as.numeric(from)) %>% filter(!is.na(from) & from >= 1980)
View(players)
players <- df_players %>% mutate(from = as.numeric(from)) %>% filter(!is.na(from) & from >= 1980)
players$name <- paste0(sub("[a-zA-Z\\.\\'\\-]+ ", "", df_players$player)," ",sub(" [a-zA-Z\\.\\'\\-]+", "", df_players$player))
players <- df_players %>% mutate(from = as.numeric(from)) %>% filter(!is.na(from) & from >= 1980)
players$name <- paste0(sub("[a-zA-Z\\.\\'\\-]+ ", "", players$player)," ",sub(" [a-zA-Z\\.\\'\\-]+", "", players$player))
unique(players$name)
View(unique(players$name))
View(unique(players$name))
View(players)
slugs <- as.list(players$slug)
slugs
slugs <- unlist(as.list(players$slug))
slugs
str(slugs)
df = data.frame()
for (i in  slugs){
# vector output
initials <- paste0(substr(as.character(slug[1,1]), 1, 1),"/")
player_stats <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initials,i,".html"), which = 1, header = 1,rm_nodata_cols = F)
df_players <- rbind(df,player_stats)
}
head(slugs)
slugs[1]
initials <- paste0(slug[1],"/")
initials
slugs
slug[1]
initials <- paste0(slugs[1],"/")
initals
initials
i <- slugs[1]
i
initlas <- paste0(substr(as.character(i, 1, 1),"/")
)
initlas <- paste0(substr(as.character(i, 1, 1)),"/")
initlas <- paste0(substr(i, 1, 1),"/")
initials
substring(i,1,1)
substr(i,1,1)
paste0(substr(i,1,1),"/")
df = data.frame()
for (i in  slugs){
# vector output
initials <- paste0(substr(i,1,1),"/")
player_stats <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initials,i,".html"), which = 1, header = 1,rm_nodata_cols = F)
df_players <- rbind(df,player_stats)
}
players <- df_players %>% mutate(from = as.numeric(from), to = as.numeric(to)) %>% mutate(years_active = to - from) %>% filter(!is.na(from) & from >= 1980 & years_active >= 5)
df_players = data.frame()
for (i in  LETTERS){
# vector output
players <- try(get_players(i))
df_players <- rbind(df_players,players)
}
players <- df_players %>% mutate(from = as.numeric(from), to = as.numeric(to)) %>% mutate(years_active = to - from) %>% filter(!is.na(from) & from >= 1980 & years_active >= 5)
nrow(players)
players$name <- paste0(sub("[a-zA-Z\\.\\'\\-]+ ", "", players$player)," ",sub(" [a-zA-Z\\.\\'\\-]+", "", players$player))
slugs <- unlist(as.list(players$slug))
df = data.frame()
for (i in  slugs){
# vector output
initials <- paste0(substr(i,1,1),"/")
player_stats <- htmltab(doc = paste0("https://www.basketball-reference.com/players/",initials,i,".html"), which = 1, header = 1,rm_nodata_cols = F)
df_players <- rbind(df,player_stats)
}
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(dplyr)
library(bbr)
library(htmltab)
library(stringr)
library(shiny)
install.packages("shiny")
install.packages("bbr")
install.packages("devtools")
devtools::install_github("mbjoseph/bbr")
devtools::install_github("mbjoseph/bbr")
install.packages("devtools")
install.packages("devtools")
library("devtools")
devtools::install_github("mbjoseph/bbr")
library(ggplot2)
library(dplyr)
library(bbr)
library(htmltab)
library(stringr)
library(shiny)
devtools::install_github("mbjoseph/bbr")
devtools::install_github("mbjoseph/bbr")
set_config( config( ssl_verifypeer = 0L ) )
library(httr)
set_config(config(ssl_verifypeer = 0L))
devtools::install_github("mbjoseph/bbr")
.fixdevtools <- function() { httr::set_config( httr::config( ssl_verifypeer = 0L ) ) }
.fixdevtools()
devtools::install_github("mbjoseph/bbr")
set_config( config( ssl.verifypeer = 0L ) )
devtools::install_github("mbjoseph/bbr")
devtools::install_github("mbjoseph/bbr")
library(bbr)
install.packages("httr")
install.packages("httr")
library(httr)
devtools::install_github("mbjoseph/bbr")
install.packages("git2r")
install.packages("git2r")
library(git2r)
devtools::install_github("mbjoseph/bbr")
