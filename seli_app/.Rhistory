shiny::runApp()
questions <- colnames(raw)
head(questions)
questions <- as.data.frame(questions)
head(questions)
questions
questions <- colnames(raw)
questions
library(tidyverse)
library(plotly)
library(ggplot2)
library(plyr)
require(pacman)
library(lubridate)
pacman::p_load(sentimentr, dplyr, magrittr)
c25 <- c("dodgerblue2","#E31A1C", # red
"green4",
"#6A3D9A", # purple
"#FF7F00", # orange
"black","gold1",
"skyblue2","#FB9A99", # lt pink
"palegreen2",
"#CAB2D6", # lt purple
"#FDBF6F", # lt orange
"gray70", "khaki2",
"maroon","orchid1","deeppink1","blue1","steelblue4",
"darkturquoise","green1","yellow4","yellow3",
"darkorange4","brown")
#Set Working Directore
setwd("/Users/mickey/Documents/GitHub/data-products/seli_app")
#get data
df <- read.csv("20180830003631-SurveyExport - 20180830003631-SurveyExport.csv")
raw <- df
#segments
raw$customer_type <- ifelse(str_replace_all(raw$How.often.do.you.purchase.from.THE.ICONIC., "[[:punct:]]", " ") == 'I haven t made a purchase yet','new',
ifelse(raw$How.often.do.you.purchase.from.THE.ICONIC. == 'This is my first purchase','new',
'existing'))
questions <- colnames(raw)
questions <- as.data.frame(questions)
head(questions)
str(questions)
names(questions)
questions <- mutate(text = str_replace_all(variable, "\.+", " "))
questions <- mutate(text = str_replace_all(variable, "\\.+", " "))
questions <- mutate(text = str_replace_all(questions, "\\.+", " "))
questions <-questions %>%  mutate(text = str_replace_all(questions, "\\.+", " "))
head(questions)
questions <-questions %>%  mutate(text = str_replace_all(questions, "\\.+", " ")) %>% mutate(id = row_number())
questions <- colnames(raw)
questions <- as.data.frame(questions)
questions <-questions %>%  mutate(text = str_replace_all(questions, "\\.+", " ")) %>% mutate(id = row_number())
questions <-questions %>%  mutate(text = str_replace_all(questions, "\\.+", " "),id = row_number())
head(questions)
questions <-questions %>%  mutate(text = str_replace_all(questions, "\\.+", " "),id = row_number(questions))
head(questions)
questions <-questions %>%  mutate(text = str_replace_all(questions, "\\.+", " "),id = row_number())
row_number(questions)
questions
questions
questions <- colnames(raw)
questions <- as.data.frame(questions)
questions <-questions %>%  mutate(text = str_replace_all(questions, "\\.+", " "))
questions
View(questions)
View(raw %>% select (?Google.Search.link..Ad.What.type.of.communication...advertisement.was.it.,Google.Search.link..Ad.What.type.of.communication...advertisement.was.it..1,Email.Newsletter.What.type.of.communication...advertisement.was.it.,Email.Newsletter.What.type.of.communication...advertisement.was.it..1))
View(raw %>% select (Google.Search.link..Ad.What.type.of.communication...advertisement.was.it.,Google.Search.link..Ad.What.type.of.communication...advertisement.was.it..1,Email.Newsletter.What.type.of.communication...advertisement.was.it.,Email.Newsletter.What.type.of.communication...advertisement.was.it..1))
View(raw)
questions <-questions %>%  mutate(text = str_replace_all(questions, "\\.+", " ")) %>% mutate(id = row_number())
help(row_number)
x <- c(5, 1, 3, 2, 2
row_number(x)
x <- c(5, 1, 3, 2, 2)
row_number(x)
questions <-questions %>%  mutate(text = str_replace_all(questions, "\\.+", " ")) %>% seq.int(nrow())
questions <-questions %>%  mutate(text = str_replace_all(questions, "\\.+", " ")) %>% seq.int(nrow(question))
questions <- colnames(raw)
questions <- as.data.frame(questions)
questions <-questions %>%  mutate(text = str_replace_all(questions, "\\.+", " ")) %>% seq.int(nrow(questions))
q <- colnames(raw)
q <- as.data.frame(questions)
q <-q %>% dplyr::rename(questions = q) %>% mutate(text = str_replace_all(questions, "\\.+", " ")) %>% seq.int(nrow(questions))
q <-q %>% dplyr::rename(questions = q) %>% mutate(text = str_replace_all(questions, "\\.+", " "))# %>% seq.int(nrow(questions))
q <- as.data.frame(questions)
q <-q %>% dplyr::rename(questions = q)
q <- colnames(raw)
q <- as.data.frame(q)
q <-q %>% dplyr::rename(questions = q) %>% mutate(text = str_replace_all(questions, "\\.+", " "))# %>% seq.int(nrow(questions))
head(q)
q <- colnames(raw)
q <- as.data.frame(q)
q <-q %>% dplyr::rename(questions = q) %>% mutate(text = str_replace_all(questions, "\\.+", " ")) %>% seq.int(nrow(questions))
q <-q %>% dplyr::rename(questions = q) %>% mutate(text = str_replace_all(questions, "\\.+", " ")) %>% seq.int(nrow())
q <- colnames(raw)
q <- as.data.frame(q)
q <-q %>% dplyr::rename(questions = q) %>% mutate(text = str_replace_all(questions, "\\.+", " "))
q$ID <- seq.int(nrow(q))
q
q <- colnames(raw)
q <- as.data.frame(q)
q <-q %>% dplyr::rename(questions = q) %>% mutate(text = str_replace_all(questions, "\\.+", " "))
q$ID <- paste0('q',seq.int(nrow(q)))
head(q)
q <- colnames(raw)
q <- as.data.frame(q)
q <-q %>% dplyr::rename(questions = q) %>% mutate(text = str_replace_all(questions, "\\.+", " "))
q$id <- seq.int(nrow(q))
head(q)
q
View(q)
str(raw$Google.Search.link..Ad.What.type.of.communication...advertisement.was.it.)
summary(raw$Google.Search.link..Ad.What.type.of.communication...advertisement.was.it.)
questions <- raw %>% select(grepl(".Ad.What.type.of.communication...advertisement.was.it.")
questions <- raw %>% select(grepl(".Ad.What.type.of.communication...advertisement.was.it."))
channel <- select(raw, grepl(".Ad.What.type.of.communication...advertisement.was.it.",colnames(data)))
channel <- select(raw, grepl(".Ad.What.type.of.communication...advertisement.was.it.",colnames(raw)))
colnames(raw)
channel <- select(raw, grepl(".Ad.What.type.of.communication...advertisement.was.it.",colnames(raw)))
channel <- raw %>% select(matches(".Ad.What.type.of.communication...advertisement.was.it."))
channel
head(channel)
ifelse(i != "",1,0)
ifelse(channel != "",1,0)
channel <- raw %>% select(matches(".Ad.What.type.of.communication...advertisement.was.it."))
channel <-
for channel {
ifelse(channel != "",1,0)
}
channel <- raw %>% select(matches(".Ad.What.type.of.communication...advertisement.was.it."))
for (i in channel) {
ifelse(channel != "",1,0)
h[i] = 1
}
channel <- raw %>% select(matches(".Ad.What.type.of.communication...advertisement.was.it."))
for (i in channel) {
ifelse(channel != "",1,0)
channel[i] = 1
}
for (i in channel) {
ifelse(i != "",1,0)
channel[i] = 1
}
channel <- raw %>% select(matches(".Ad.What.type.of.communication...advertisement.was.it."))
for (i in channel) {
ifelse(i != "",1,0)
channel[i] = 1
}
channel
head(channel)
channel <- raw %>% select(matches(".Ad.What.type.of.communication...advertisement.was.it."))
for (i in channel) {
if (channel[i] == "")
h[i] = 0
if (channel[i] != "")
h[i] = 1
}
channel[i] = 1
channel <- colnames(raw)
channel <- matches(".Ad.What.type.of.communication...advertisement.was.it.")
channel <- colnames(raw)
channel <- grepl(".Ad.What.type.of.communication...advertisement.was.it.", channel)
channel
help(grepl)
channel <- colnames(raw)
channel <- grep(".Ad.What.type.of.communication...advertisement.was.it.", channel,value=T)
channel
channel[i] = 0
for (i in channel) {
if (channel[i] == "")
channel[i] = 0
if (channel[i] != "")
channel[i] = 1
}
raw[i] = 0
for (i in channel) {
if (raw[i] == "")
raw[i] = 0
if (raw[i] != "")
raw[i] = 1
}
warnings
View(raw)
raw [i] <- ifelse(raw[i] == "",0,1)
for (i in channel) {
raw [i] <- ifelse(raw[i] == "",0,1)
}
View(raw)
channel <- colnames(raw)
channel <- grep(".Ad.What.type.of.communication...advertisement.was.it.", channel,value=T)
channel
names(raw)
head(raw[48])
head(raw[12,48])
df <- read.csv("20180830003631-SurveyExport - 20180830003631-SurveyExport.csv")
raw <- df
View(12,48)
View(raw[12,48])
View(raw)
View(raw %>% elect(Google.Search.link..Ad.What.type.of.communication...advertisement.was.it.,Google.Search.link..Ad.What.type.of.communication...advertisement.was.it..1))
View(raw %>% select(Google.Search.link..Ad.What.type.of.communication...advertisement.was.it.,Google.Search.link..Ad.What.type.of.communication...advertisement.was.it..1))
q
View(q)
questions
q
q %>% select(questions)
channel
questions
View(questions)
Vieq(q)
View(q)
q <- q[10]
q <- q[,10]
q <- q[10,]
q <- colnames(raw)
q <- as.data.frame(q)
q <-q %>% dplyr::rename(questions = q) %>% mutate(text = str_replace_all(questions, "\\.+", " "))
q$id <- seq.int(nrow(q))
unique(raw$How.did.you.feel.about.the.advertisement...marketing.communication.)
unique(raw$How.did.you.feel.about.the.advertisement...marketing.communication.1)
unique(raw$How.did.you.feel.about.the.advertisement...marketing.communication.1)
unique(raw$How.did.you.feel.about.the.advertisement...marketing.communication..1)
unique(raw$How.do.you.feel.about.THE.ICONIC.brand.)
runApp('sentiment')
library(devtools)
install_github('slidify', 'ramnathv')
library('slidify')
library('ramnathv')
library('ramnathv')
author("survey_sentiment")
---
title       : Survey Results
subtitle    : Frquencies and Sentiment
author      : Michael Ebner
job         : Data Analyst
framework   : io2012        # {io2012, html5slides, shower, dzslides, ...}
highlighter : highlight.js  # {highlight.js, prettify, highlight}
hitheme     : tomorrow      #
widgets     : []            # {mathjax, quiz, bootstrap}
mode        : selfcontained # {standalone, draft}
knit        : slidify::knit2slides
---
## Read-And-Delete
1. Edit YAML front matter
2. Write using R Markdown
3. Use an empty line followed by three dashes to separate slides!
--- .class #id
## Slide 2
install_github('slidifyLibraries', 'ramnathv')
runApp('~/Documents/GitHub/data-products/seli_app/sentiment')
