freq <- as.data.frame(table(final$topic)) %>% dplyr::rename(topic = Var1)
freq$prop <- freq$Freq / nrow(out) * 100
freq_c <- as.data.frame(table(final$customer_type,final$topic)) %>% dplyr::rename(customer_type = Var1,topic = Var2)
total_c <- as.data.frame(table(out$customer_type)) %>% dplyr::rename(customer_type = Var1,total = Freq)
freq_c <- merge(freq_c,total_c,by = c("customer_type"))
freq_c$prop <- freq_c$Freq / freq_c$total * 100
freq_m <- as.data.frame(table(final$month,final$topic)) %>% dplyr::rename(month = Var1,topic = Var2)
total_m <- as.data.frame(table(out$month)) %>% dplyr::rename(month = Var1,total = Freq)
freq_m <- merge(freq_m,total_m,by = c("month"))
freq_m$prop <- freq_m$Freq / freq_m$total * 100
freq_m_c <- as.data.frame(table(final$month,final$customer_type,final$topic)) %>% dplyr::rename(month = Var1,topic = Var3,customer_type = Var2)
total_m_c <- as.data.frame(table(out$customer_type,out$month)) %>% dplyr::rename(month = Var2,total = Freq,customer_type = Var1)
freq_m_c <- merge(freq_m_c,total_m_c,by = c("month","customer_type"))
freq_m_c$prop <- freq_m_c$Freq / freq_m_c$total * 100
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x='total',y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = customer_type)+
geom_boxplot(alpha = .01)+
#facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)+
labs(title = paste0('sentiment on ',topic_selection),
y = 'sentiment score',
x = ' ',
caption = 'outliers removed')+
theme_classic(base_size = 15)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x='total',y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1)+
geom_boxplot(alpha = .01)+
#facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)+
labs(title = paste0('sentiment on ',topic_selection),
y = 'sentiment score',
x = ' ',
caption = 'outliers removed')+
theme_classic(base_size = 15)
runApp()
runApp()
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x='total',y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, aes(color = topic))+
geom_boxplot(alpha = .01)+
#facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)+
labs(title = paste0('sentiment on ',topic_selection),
y = 'sentiment score',
x = ' ',
caption = 'outliers removed')+
theme_classic(base_size = 15)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x='total',y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, aes(color = topic))+
geom_boxplot(alpha = .01)+
#facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x='total',y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, aes(color = topic))+
geom_boxplot(alpha = .01)+
#facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x='total',y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0,size = .1))+
geom_boxplot(alpha = .01)+
#facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)+
labs(title = paste0('sentiment on ',topic_selection),
y = 'sentiment score',
x = ' ',
caption = 'outliers removed')+
theme_classic(base_size = 15)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x='total',y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1)+
geom_boxplot(alpha = .01)+
#facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)+
labs(title = paste0('sentiment on ',topic_selection),
y = 'sentiment score',
x = ' ',
caption = 'outliers removed')+
theme_classic(base_size = 15)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x='total',y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1)+
geom_boxplot(alpha = .01)+
#facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x=topic,y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1)+
geom_boxplot(alpha = .01)+
#facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x=topic,y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1,color = 'grey')+
geom_boxplot(alpha = .01)+
#facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)+
labs(title = paste0('sentiment on ',topic_selection),
y = 'sentiment score',
x = ' ',
caption = 'outliers removed')+
theme_classic(base_size = 15)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x=topic,y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1,color = 'grey')+
geom_boxplot(alpha = .01)+
#facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x=month,y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = topic)+
geom_boxplot(alpha = .01)+
#facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x=month,y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = topic)+
geom_boxplot(alpha = .01)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x=month,y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = topic)+
geom_boxplot(alpha = .01)
str(tab)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x=month,y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = topic)+
geom_boxplot(alpha = .01)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x=month,y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = 'grey')+
geom_boxplot(alpha = .01)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x='total',y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = topic)+
geom_boxplot(alpha = .01)+
facet_grid(.~customer_type,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x='total',y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = 'grey')+
geom_boxplot(alpha = .01)+
facet_grid(.~customer_type,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x=topic,y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = 'grey')+
geom_boxplot(alpha = .01)+
facet_grid(.~customer_type,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x=topic,y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = 'grey')+
geom_boxplot(alpha = .01)+
coord_flip() +
facet_grid(.~customer_type,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x=topic,y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = 'grey')+
geom_boxplot(alpha = .01)+
facet_grid(.~customer_type,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x=month,y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = topic)+
geom_boxplot(alpha = .01)+
facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x=month,y=ave_sentiment,color=topic)) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = 'grey')+
geom_boxplot(alpha = .01)
tab <- final
ylim <- boxplot.stats(final$ave_sentiment)$stats[c(1,5)]
ggplot(tab, aes(x='total',y=ave_sentiment,color=c25[1])) +
geom_jitter(position=position_jitter(width=.1, height=0),size = .1, color = "grey")+
geom_boxplot(alpha = .01,show.legend=F)+
#facet_grid(customer_type~.,scales = "free")+
scale_y_continuous(breaks = seq(-2,2, by=.25), limits = ylim)+
scale_color_manual(values=c25)
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(tidyverse)
library(plotly)
library(stringr)
library(ggplot2)
library(plyr)
library(lubridate)
require(pacman)
pacman::p_load(sentimentr, dplyr, magrittr)
c25 <- c("dodgerblue2","#E31A1C", # red
"green4",
"#6A3D9A", # purple
"#FF7F00", # orange
"black","gold1",
"skyblue2","#FB9A99", # lt pink
"palegreen2",
"#CAB2D6", # lt purple
"#FDBF6F", # lt orange
"gray70", "khaki2",
"maroon","orchid1","deeppink1","blue1","steelblue4",
"darkturquoise","green1","yellow4","yellow3",
"darkorange4","brown")
#Set Working Directore
setwd("/Users/mebner/Documents/for_me/R_coursera/GitHub/data-products/seli_app/sentiment")
#get data
list.files(getwd(), pattern="*.csv")
df_list <- lapply(Sys.glob("*.csv"), read.csv)
df <- ldply(df_list, data.frame)
raw <- df
#segments
raw$customer_type <- ifelse(str_replace_all(raw$How.often.do.you.purchase.from.THE.ICONIC., "[[:punct:]]", " ") == 'I haven t made a purchase yet','new',
ifelse(raw$How.often.do.you.purchase.from.THE.ICONIC. == 'This is my first purchase','new',
'existing'))
#reshape data
subdf <- raw %>%
subset(!is.na(For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.)) %>%
select(Response.ID,customer_type,Time.Started,City,For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
mutate(month = round_date(as.Date(Time.Started),"month")) %>%
select(month,customer_type,Response.ID,City,For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
dplyr::rename(feedback = For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
mutate(feedback = as.character(feedback),month = as.character(month))
#keywords
word_list <- data.frame(variable = subdf$feedback,stringsAsFactors =F ) %>%
mutate(variable = str_replace_all(variable, "[[:punct:]]", " ")) %>%
mutate(variable = str_split(variable,' ')) %>%
unnest() %>% subset(grepl("[A-Za-z]", variable)) %>%
mutate(variable = tolower(variable)) %>%
mutate(var_length = nchar(variable)) %>%
subset(var_length > 2)
word_list <- as.data.frame(table(word_list$variable))
word_list$perc <- round(word_list$Freq / sum(word_list$Freq),4)
#attribution
subdf$social <- ifelse(grepl("soci|facebook|facbook|faceb|influenc|instagram|pinterest|snapc|qzone|weibo|twitter|reddit|flickr|linkedin|whtasapp|vlogger|tweet|tumblr|post|blog", subdf$feedback),1,0)
subdf$search <- ifelse(grepl("adwo|search|organic|yahoo|seo|google|yahoo|link", subdf$feedback),1,0)
subdf$crm <- ifelse(grepl("mail|notifi|mial|news.letter", subdf$feedback),1,0)
subdf$display <- ifelse(grepl("banner|display|add", subdf$feedback),1,0)
#subdf$iconic <- ifelse(grepl("iconic", subdf$feedback),1,0)
subdf$promo <- ifelse(grepl("price|bargain|cheap|expensive|deal|sale|discount|vouch|promo|offer", subdf$feedback),1,0)
subdf$shipping <- ifelse(grepl("ship|deliv", subdf$feedback),1,0)
subdf$presentation <- ifelse(grepl("pictur|photo|photo|models|video|graph|virtual|visual|diversit",subdf$feedback),1,0)
subdf$features <- ifelse(grepl("watchlist|web|page|recommend|perso.nal|wishlist|inspir|interact|scroll|lookbook",subdf$feedback),1,0)
subdf$loyalty <- ifelse(grepl("vip|loya|rewar|progra",subdf$feedback),1,0)
subdf$assortment <- ifelse(grepl("brand|adidas|nike|billabong|birkenstock|birdsnest|tommi|tomboy|reebok|ralph|lauren|oxygen|assort|baby|babie|basics|basketball|baskets|beach|black|blazer|waterproof|uniform|trainer|tracksuit|toddler|theiconicmen|theiconicsports|shirt|jeans|swim|sunglass|summer|racewear|race|petit|outerwear|outdoor|styles|outfit|tailored|variety|accessor|colour|categories|festival|everywhere",subdf$feedback),1,0)
sent <- with(subdf,sentiment_by(get_sentences(feedback),list(Response.ID)))
raw <- df
#segments
raw$customer_type <- ifelse(str_replace_all(raw$How.often.do.you.purchase.from.THE.ICONIC., "[[:punct:]]", " ") == 'I haven t made a purchase yet','new',
ifelse(raw$How.often.do.you.purchase.from.THE.ICONIC. == 'This is my first purchase','new',
'existing'))
#reshape data
subdf <- raw %>%
subset(!is.na(For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.)) %>%
select(Response.ID,customer_type,Time.Started,City,For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
mutate(month = round_date(as.Date(Time.Started),"month")) %>%
select(month,customer_type,Response.ID,City,For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
dplyr::rename(feedback = For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
mutate(feedback = as.character(feedback),month = as.character(month))
list.files(getwd(), pattern="*.csv")
df_list <- lapply(Sys.glob("*.csv"), read.csv)
df <- ldply(df_list, data.frame)
raw <- df
#segments
raw$customer_type <- ifelse(str_replace_all(raw$How.often.do.you.purchase.from.THE.ICONIC., "[[:punct:]]", " ") == 'I haven t made a purchase yet','new',
ifelse(raw$How.often.do.you.purchase.from.THE.ICONIC. == 'This is my first purchase','new',
'existing'))
#reshape data
subdf <- raw %>%
subset(!is.na(For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.)) %>%
select(Response.ID,customer_type,Time.Started,City,For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
mutate(month = round_date(as.Date(Time.Started),"month")) %>%
select(month,customer_type,Response.ID,City,For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
dplyr::rename(feedback = For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
mutate(feedback = as.character(feedback),month = as.character(month))
list.files(getwd(), pattern="*.csv")
df_list <- lapply(Sys.glob("*.csv"), read.csv)
df <- ldply(df_list, data.frame)
setwd("/Users/mebner/Documents/for_me/R_coursera/GitHub/data-products/seli_app/sentiment")
#get data
df_list <- lapply(Sys.glob("*.csv"), read.csv)
df <- ldply(df_list, data.frame)
raw <- df
#segments
raw$customer_type <- ifelse(str_replace_all(raw$How.often.do.you.purchase.from.THE.ICONIC., "[[:punct:]]", " ") == 'I haven t made a purchase yet','new',
ifelse(raw$How.often.do.you.purchase.from.THE.ICONIC. == 'This is my first purchase','new',
'existing'))
View(raw)
raw$customer_type <- ifelse(str_replace_all(raw$How.often.do.you.purchase.from.THE.anonymized., "[[:punct:]]", " ") == 'I haven t made a purchase yet','new',
ifelse(raw$How.often.do.you.purchase.from.THE.ICONIC. == 'This is my first purchase','new',
'existing'))
#reshape data
subdf <- raw %>%
subset(!is.na(For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.)) %>%
select(Response.ID,customer_type,Time.Started,City,For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
mutate(month = round_date(as.Date(Time.Started),"month")) %>%
select(month,customer_type,Response.ID,City,For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
dplyr::rename(feedback = For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
mutate(feedback = as.character(feedback),month = as.character(month))
#keywords
word_list <- data.frame(variable = subdf$feedback,stringsAsFactors =F ) %>%
mutate(variable = str_replace_all(variable, "[[:punct:]]", " ")) %>%
mutate(variable = str_split(variable,' ')) %>%
unnest() %>% subset(grepl("[A-Za-z]", variable)) %>%
mutate(variable = tolower(variable)) %>%
mutate(var_length = nchar(variable)) %>%
subset(var_length > 2)
word_list <- as.data.frame(table(word_list$variable))
word_list$perc <- round(word_list$Freq / sum(word_list$Freq),4)
#attribution
subdf$social <- ifelse(grepl("soci|facebook|facbook|faceb|influenc|instagram|pinterest|snapc|qzone|weibo|twitter|reddit|flickr|linkedin|whtasapp|vlogger|tweet|tumblr|post|blog", subdf$feedback),1,0)
subdf$search <- ifelse(grepl("adwo|search|organic|yahoo|seo|google|yahoo|link", subdf$feedback),1,0)
subdf$crm <- ifelse(grepl("mail|notifi|mial|news.letter", subdf$feedback),1,0)
subdf$display <- ifelse(grepl("banner|display|add", subdf$feedback),1,0)
#subdf$iconic <- ifelse(grepl("iconic", subdf$feedback),1,0)
subdf$promo <- ifelse(grepl("price|bargain|cheap|expensive|deal|sale|discount|vouch|promo|offer", subdf$feedback),1,0)
subdf$shipping <- ifelse(grepl("ship|deliv", subdf$feedback),1,0)
subdf$presentation <- ifelse(grepl("pictur|photo|photo|models|video|graph|virtual|visual|diversit",subdf$feedback),1,0)
subdf$features <- ifelse(grepl("watchlist|web|page|recommend|perso.nal|wishlist|inspir|interact|scroll|lookbook",subdf$feedback),1,0)
subdf$loyalty <- ifelse(grepl("vip|loya|rewar|progra",subdf$feedback),1,0)
subdf$assortment <- ifelse(grepl("brand|adidas|nike|billabong|birkenstock|birdsnest|tommi|tomboy|reebok|ralph|lauren|oxygen|assort|baby|babie|basics|basketball|baskets|beach|black|blazer|waterproof|uniform|trainer|tracksuit|toddler|theiconicmen|theiconicsports|shirt|jeans|swim|sunglass|summer|racewear|race|petit|outerwear|outdoor|styles|outfit|tailored|variety|accessor|colour|categories|festival|everywhere",subdf$feedback),1,0)
sent <- with(subdf,sentiment_by(get_sentences(feedback),list(Response.ID)))
out <- merge(subdf,sent,by = "Response.ID")
social <- out %>% subset(social == 1) %>% mutate(topic = 'social', topic_n = paste0('social (',nrow(out %>% subset(social == 1)),')'))
search <- out %>% subset(search == 1) %>% mutate(topic = 'search', topic_n = paste0('search (',nrow(out %>% subset(search == 1)),')'))
crm <- out %>% subset(crm == 1) %>% mutate(topic = 'crm', topic_n = paste0('crm (',nrow(out %>% subset(crm == 1)),')'))
display  <- out %>% subset(display == 1) %>% mutate(topic = 'display', topic_n = paste0('display (',nrow(out %>% subset(display == 1)),')'))
#iconic <- out %>% subset(iconic == 1) %>% mutate(topic = 'iconic', topic = paste0('iconic (',nrow(out %>% subset(iconic == 1)),')'))
promo  <- out %>% subset(promo == 1) %>% mutate(topic = 'promo', topic_n = paste0('promo (',nrow(out %>% subset(promo == 1)),')'))
shipping  <- out %>% subset(shipping == 1) %>% mutate(topic = 'shipping', topic_n = paste0('shipping (',nrow(out %>% subset(shipping == 1)),')'))
presentation  <- out %>% subset(presentation == 1) %>% mutate(topic = 'presentation', topic_n = paste0('presentation (',nrow(out %>% subset(presentation == 1)),')'))
features  <- out %>% subset(features == 1) %>% mutate(topic = 'features', topic_n = paste0('features (',nrow(out %>% subset(features == 1)),')'))
assortment  <- out %>% subset(assortment == 1) %>% mutate(topic = 'assortment', topic_n = paste0('assortment (',nrow(out %>% subset(assortment == 1)),')'))
loyalty  <- out %>% subset(loyalty == 1) %>% mutate(topic = 'loyalty', topic_n = paste0('loyalty (',nrow(out %>% subset(loyalty == 1)),')'))
final <- rbind(social,search,crm,display,promo,shipping,presentation,features,loyalty,assortment)
freq <- as.data.frame(table(final$topic)) %>% dplyr::rename(topic = Var1)
freq$prop <- freq$Freq / nrow(out) * 100
freq_c <- as.data.frame(table(final$customer_type,final$topic)) %>% dplyr::rename(customer_type = Var1,topic = Var2)
total_c <- as.data.frame(table(out$customer_type)) %>% dplyr::rename(customer_type = Var1,total = Freq)
freq_c <- merge(freq_c,total_c,by = c("customer_type"))
freq_c$prop <- freq_c$Freq / freq_c$total * 100
freq_m <- as.data.frame(table(final$month,final$topic)) %>% dplyr::rename(month = Var1,topic = Var2)
total_m <- as.data.frame(table(out$month)) %>% dplyr::rename(month = Var1,total = Freq)
freq_m <- merge(freq_m,total_m,by = c("month"))
freq_m$prop <- freq_m$Freq / freq_m$total * 100
freq_m_c <- as.data.frame(table(final$month,final$customer_type,final$topic)) %>% dplyr::rename(month = Var1,topic = Var3,customer_type = Var2)
total_m_c <- as.data.frame(table(out$customer_type,out$month)) %>% dplyr::rename(month = Var2,total = Freq,customer_type = Var1)
freq_m_c <- merge(freq_m_c,total_m_c,by = c("month","customer_type"))
freq_m_c$prop <- freq_m_c$Freq / freq_m_c$total * 100
runApp()
runApp()
runApp()
head(freq_m_c)
unique(frq_m_c$customer_type)
unique(freq_m_c$customer_type)
unique(freq_m$customer_type)
unique(freq_c$customer_type)
runApp()
freq <- as.data.frame(table(final$topic)) %>% dplyr::rename(topic = Var1)
freq$prop <- freq$Freq / nrow(out) * 100
head(freq)
freq_c <- as.data.frame(table(final$customer_type,final$topic)) %>% dplyr::rename(customer_type = Var1,topic = Var2)
total_c <- as.data.frame(table(out$customer_type)) %>% dplyr::rename(customer_type = Var1,total = Freq)
freq_c <- merge(freq_c,total_c,by = c("customer_type"))
freq_c$prop <- freq_c$Freq / freq_c$total * 100
head(freq_c)
df_list <- lapply(Sys.glob("*.csv"), read.csv)
df <- ldply(df_list, data.frame)
raw <- df
#segments
raw$customer_type <- ifelse(str_replace_all(raw$How.often.do.you.purchase.from.THE.anonymized., "[[:punct:]]", " ") == 'I haven t made a purchase yet','new',
ifelse(raw$How.often.do.you.purchase.from.THE.ICONIC. == 'This is my first purchase','new',
'existing'))
#reshape data
subdf <- raw %>%
subset(!is.na(For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.)) %>%
select(Response.ID,customer_type,Time.Started,City,For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
mutate(month = round_date(as.Date(Time.Started),"month")) %>%
select(month,customer_type,Response.ID,City,For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
dplyr::rename(feedback = For.a.chance.to.win..200.voucher..please.tell.us.in.100.words.or.less..what.type.of.advertising.you.d.like.to.see.from.us.and.how.we.can.improve.Â.) %>%
mutate(feedback = as.character(feedback),month = as.character(month))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='michaelebner',
token='0AE17FC27F2BF7590C7554FDFDED0C87',
secret='rsconnect::setAccountInfo(name='michaelebner', token='0AE17FC27F2BF7590C7554FDFDED0C87', secret='SGFTrcD0MrxRPMyNhkgxOZ9oCHZwEqomkHqGoe26')')
rsconnect::setAccountInfo(name='michaelebner', token='0AE17FC27F2BF7590C7554FDFDED0C87', secret='SGFTrcD0MrxRPMyNhkgxOZ9oCHZwEqomkHqGoe26')
library(rsconnect)
rsconnect::deployApp('/Users/mebner/Documents/for_me/R_coursera/GitHub/data-products/sentiment_app/sentiment/app.R')
library(rsconnect)
rsconnect::deployApp('/Users/mebner/Documents/for_me/R_coursera/GitHub/data-products/sentiment_app/sentiment')
library(rsconnect)
rsconnect::deployApp('/Users/mebner/Documents/for_me/R_coursera/GitHub/data-products/sentiment_app/sentiment')
library(rsconnect)
rsconnect::deployApp('/Users/mebner/Documents/for_me/R_coursera/GitHub/data-products/sentiment_app/sentiment')
library(rsconnect)
rsconnect::deployApp('/Users/mebner/Documents/for_me/R_coursera/GitHub/data-products/sentiment_app/sentiment')
row.names(df)
col.names(df)
colnames(df)
questions <- colnames(df)
questions <- as.data.frame(colnames(df))
head(questions)
View(questions)
questions <- as.data.frame(colnames(df))$[c(9:72)]
questions <- as.data.frame(colnames(df))[c(9:72)]
questions <- as.data.frame(colnames(df %>% select(-Response.ID,-Time.Started,-Country,-City,-State.Region,-Postal)))
View(df %>% select(Comments))
questions <- as.data.frame(colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal)))
questions
questions <- as.data.frame(colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal)))
head(questions)
questions <- as.data.frame(colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal))) %>% dplyr::rename(column_name = colnames(df %>% select(-Response.ID, -Time.Started, -Comments, -Country, -City, -State.Region, -Postal)))
questions <- as.data.frame(colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal))) %>% dplyr::rename(column_name = colnames(df %>% select(-Response.ID, -Time.Started, -Comments, -Country, -City, -State.Region, -Postal)))
questions <- as.data.frame(colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal)))
colnames(questions)
questions <- colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal))
questions <- as.data.frame(questions)
head(questions)
questions <- colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal)) %>% as.data.frame()
head(questions)
questions <- colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal)) %>% as.data.frame() %>% dplyr::rename(questions = .)
questions <- colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal)) %>% as.data.frame() %>% dplyr::rename(. = questions)
questions <- colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal)) %>% as.data.frame()
head(questions)
questions <- colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal)) %>% as.data.frame()
head(questions)
questions <- colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal)
questions <- as.data.frame(questions)
questions <- colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal)
questions <- colnames(df %>% select(-Response.ID,-Time.Started,-Comments,-Country,-City,-State.Region,-Postal))
questions <- as.data.frame(questions)
head(questions)
questions <- as.data.frame(questions) %>% mutate(clean = str_replace_all(variable, ".", " "))
questions <- as.data.frame(questions) %>% mutate(clean = str_replace_all(questions, ".", " "))
head(questions)
questions <- as.data.frame(questions) %>% mutate(clean = str_replace_all(questions, "\.", " "))
questions <- as.data.frame(questions) %>% mutate(clean = str_replace_all(questions, "\\.", " "))
head(questions)
questions <- colnames(df %>% select(-Response.ID,-Time.Started,-Date.Submitted,-Comments,-Country,-City,-State.Region,-Postal))
questions <- as.data.frame(questions) %>% mutate(clean = str_replace_all(questions, "\\.", " "))
head(questions)
questions <- as.data.frame(questions) %>% mutate(clean = str_replace_all(questions, "\\.+", " "))
head(questions)
names(df)
questions <- as.data.frame(questions) %>% mutate(clean = str_replace_all(questions, "\\.+", " ")) %>% filter(row_number() >= 2)
questions <- as.data.frame(questions) %>% mutate(clean = str_replace_all(questions, "\\.+", " ")) %>% filter(row_number(questions) >= 2)
head(questions)
questions <- colnames(df %>% select(-Response.ID,-Time.Started,-Date.Submitted,-Comments,-Country,-City,-State.Region,-Postal))
questions <- as.data.frame(questions) %>% mutate(clean = str_replace_all(questions, "\\.+", " ")) %>% filter(row_number(questions) == 2)
head(questions)
questions <- colnames(df %>% select(-Response.ID,-Time.Started,-Date.Submitted,-Comments,-Country,-City,-State.Region,-Postal))
questions <- as.data.frame(questions) %>% mutate(clean = str_replace_all(questions, "\\.+", " "))
head(questions)
questions
View(questions)
